============================== PROBLEM 1 ==============================

create database sb101day11;
use sb101day11;
show tables;

CREATE TABLE customers
(
customer_id INT PRIMARY KEY,
first_name VARCHAR(255) NOT NULL,
last_name VARCHAR(255) NOT NULL,
email VARCHAR(255) NOT NULL,
address VARCHAR(255) DEFAULT NULL,
city VARCHAR(255) DEFAULT NULL,
state VARCHAR(2) DEFAULT NULL,
zip_code VARCHAR(5) DEFAULT NULL
);

CREATE TABLE orders
(
order_id INT PRIMARY KEY,
customer_id INT NOT NULL,
order_placed_date DATE NOT NULL,
FOREIGN KEY (customer_id) REFERENCES customers
(customer_id)
);

insert into customers(customer_id, first_name, last_name, email, address, city, state, zip_code) values(1, 'abc', 'a', 'abc@mail.com', '1st street', 'chennai', 'TN', '60001');
insert into customers(customer_id, first_name, last_name, email, address, city, state, zip_code) values(2, 'efg', 'e', 'efg@mail.com', '2st street', 'Bangalore', 'KA', '50002');
insert into customers(customer_id, first_name, last_name, email, address, city, state, zip_code) values(3, 'ijk', 'i', 'ijk@mail.com', '3st street', 'Mumbai', 'MH', '40002');

insert into orders(order_id, customer_id, order_placed_date) values(1, 1, '2016-11-11');
insert into orders(order_id, customer_id, order_placed_date) values(2, 1, '2016-10-01');
insert into orders(order_id, customer_id, order_placed_date) values(3, 2, '2016-06-01');
insert into orders(order_id, customer_id, order_placed_date) values(4, 2, '2015-06-01');
insert into orders(order_id, customer_id, order_placed_date) values(5, 1, '2015-06-01');


select c.email, COUNT(*) AS 'order_count' from orders o, custommers c where year(o.order_placed_date) = 2016 group by c.email order by COUNT(*) DESC;







============================== PROBLEM 2 ==============================

CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;

CREATE TABLE Worker
(
WORKER_ID int PRIMARY KEY,
FIRST_NAME varchar(25),
LAST_NAME varchar(25),
SALARY int,
JOINING_DATE datetime,
DEPARTMENT varchar(25)
);

INSERT INTO Worker
(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT)
VALUES
(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');


CREATE TABLE Bonus
(
WORKER_REF_ID INT,
BONUS_AMOUNT INT,
BONUS_DATE DATETIME,
FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE
);

INSERT INTO Bonus
(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
(001, 5000, '16-02-20'),
(002, 3000, '16-06-11'),
(003, 4000, '16-02-20'),
(001, 4500, '16-02-20'),
(002, 3500, '16-06-11');


CREATE TABLE Title
(
WORKER_REF_ID INT,
WORKER_TITLE VARCHAR(25),
AFFECTED_FROM DATETIME,
FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE
);

INSERT INTO Title
(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
(001, 'Manager', '2016-02-20 00:00:00'),
(002, 'Executive', '2016-06-11 00:00:00'),
(008, 'Executive', '2016-06-11 00:00:00'),
(005, 'Manager', '2016-06-11 00:00:00'),
(004, 'Asst. Manager', '2016-06-11 00:00:00'),
(007, 'Executive', '2016-06-11 00:00:00'),
(006, 'Lead', '2016-06-11 00:00:00'),
(003, 'Lead', '2016-06-11 00:00:00');


1. Write an SQL query to show the second highest salary from a Worker table.
select max(SALARY) from WORKER where SALARY < (select max(SALARY) from WORKER);

2. Write an SQL query to determine the 5 highest salary from a Worker table.
select salary from WORKER group by salary order by salary desc LIMIT 1 OFFSET 4;

3. Write an SQL query to show only even rows from a Worker table.


4. Write an SQL query to fetch the no. of workers for each department in descending order from the Worker table.
select department, count(*) as number from worker group by department order by number desc;

5. Write an SQL query to fetch the list of employees with the same salary from the Worker table.
